Terminals unused in grammar

   UNR


State 99 conflicts: 1 shift/reduce


Grammar

    0 $accept: ss $end

    1 $@1: %empty

    2 ss: $@1 stmt

    3 stmt: if
    4     | ifelse
    5     | while
    6     | block
    7     | a
    8     | decl

    9 if: IF OP bool CL m stmt

   10 ifelse: IF OP bool CL m stmt ELSE n m stmt

   11 while: WHILE m OP bool CL m stmt

   12 @2: %empty

   13 block: BO @2 stmt_list BC

   14 stmt_list: stmt_list m stmt
   15          | stmt

   16 $@3: %empty

   17 decl: KEY id $@3 d SC

   18 id: ID arr
   19   | ID arr EQ VAL

   20 arr: AO VAL AC arr
   21    | %empty

   22 $@4: %empty

   23 d: CM id $@4 d
   24  | %empty

   25 a: l EQ r SC
   26  | ID EQ r SC

   27 l: ID AO e AC
   28  | l AO e AC

   29 r: e

   30 bool: bool OR m bb
   31     | bool AND m bb
   32     | bb

   33 bb: NOT bb
   34   | OP bool CL
   35   | e RELOP e
   36   | TRUE
   37   | FALSE

   38 m: %empty

   39 n: %empty

   40 e: e PL t
   41  | e MI t
   42  | t
   43  | l

   44 t: t MUL f
   45  | t DIV f
   46  | f

   47 f: g POW f
   48  | g

   49 g: OP e CL
   50  | ID
   51  | VAL
   52  | MI g


Terminals, with rules where they appear

$end (0) 0
error (256)
KEY (258) 17
AND (259) 31
OR (260) 30
NOT (261) 33
RELOP (262) 35
ID (263) 18 19 26 27 50
VAL (264) 19 20 51
SC (265) 17 25 26
CM (266) 23
PL (267) 40
MI (268) 41 52
MUL (269) 44
DIV (270) 45
POW (271) 47
OP (272) 9 10 11 34 49
CL (273) 9 10 11 34 49
AO (274) 20 27 28
AC (275) 20 27 28
EQ (276) 19 25 26
BO (277) 13
BC (278) 13
UNR (279)
TRUE (280) 36
FALSE (281) 37
IF (282) 9 10
ELSE (283) 10
WHILE (284) 11


Nonterminals, with rules where they appear

$accept (30)
    on left: 0
ss (31)
    on left: 2, on right: 0
$@1 (32)
    on left: 1, on right: 2
stmt (33)
    on left: 3 4 5 6 7 8, on right: 2 9 10 11 14 15
if (34)
    on left: 9, on right: 3
ifelse (35)
    on left: 10, on right: 4
while (36)
    on left: 11, on right: 5
block (37)
    on left: 13, on right: 6
@2 (38)
    on left: 12, on right: 13
stmt_list (39)
    on left: 14 15, on right: 13 14
decl (40)
    on left: 17, on right: 8
$@3 (41)
    on left: 16, on right: 17
id (42)
    on left: 18 19, on right: 17 23
arr (43)
    on left: 20 21, on right: 18 19 20
d (44)
    on left: 23 24, on right: 17 23
$@4 (45)
    on left: 22, on right: 23
a (46)
    on left: 25 26, on right: 7
l (47)
    on left: 27 28, on right: 25 28 43
r (48)
    on left: 29, on right: 25 26
bool (49)
    on left: 30 31 32, on right: 9 10 11 30 31 34
bb (50)
    on left: 33 34 35 36 37, on right: 30 31 32 33
m (51)
    on left: 38, on right: 9 10 11 14 30 31
n (52)
    on left: 39, on right: 10
e (53)
    on left: 40 41 42 43, on right: 27 28 29 35 40 41 49
t (54)
    on left: 44 45 46, on right: 40 41 42 44 45
f (55)
    on left: 47 48, on right: 44 45 46 47
g (56)
    on left: 49 50 51 52, on right: 47 48 52


State 0

    0 $accept: . ss $end

    $default  reduce using rule 1 ($@1)

    ss   go to state 1
    $@1  go to state 2


State 1

    0 $accept: ss . $end

    $end  shift, and go to state 3


State 2

    2 ss: $@1 . stmt

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt    go to state 9
    if      go to state 10
    ifelse  go to state 11
    while   go to state 12
    block   go to state 13
    decl    go to state 14
    a       go to state 15
    l       go to state 16


State 3

    0 $accept: ss $end .

    $default  accept


State 4

   17 decl: KEY . id $@3 d SC

    ID  shift, and go to state 17

    id  go to state 18


State 5

   26 a: ID . EQ r SC
   27 l: ID . AO e AC

    AO  shift, and go to state 19
    EQ  shift, and go to state 20


State 6

   13 block: BO . @2 stmt_list BC

    $default  reduce using rule 12 (@2)

    @2  go to state 21


State 7

    9 if: IF . OP bool CL m stmt
   10 ifelse: IF . OP bool CL m stmt ELSE n m stmt

    OP  shift, and go to state 22


State 8

   11 while: WHILE . m OP bool CL m stmt

    $default  reduce using rule 38 (m)

    m  go to state 23


State 9

    2 ss: $@1 stmt .

    $default  reduce using rule 2 (ss)


State 10

    3 stmt: if .

    $default  reduce using rule 3 (stmt)


State 11

    4 stmt: ifelse .

    $default  reduce using rule 4 (stmt)


State 12

    5 stmt: while .

    $default  reduce using rule 5 (stmt)


State 13

    6 stmt: block .

    $default  reduce using rule 6 (stmt)


State 14

    8 stmt: decl .

    $default  reduce using rule 8 (stmt)


State 15

    7 stmt: a .

    $default  reduce using rule 7 (stmt)


State 16

   25 a: l . EQ r SC
   28 l: l . AO e AC

    AO  shift, and go to state 24
    EQ  shift, and go to state 25


State 17

   18 id: ID . arr
   19   | ID . arr EQ VAL

    AO  shift, and go to state 26

    $default  reduce using rule 21 (arr)

    arr  go to state 27


State 18

   17 decl: KEY id . $@3 d SC

    $default  reduce using rule 16 ($@3)

    $@3  go to state 28


State 19

   27 l: ID AO . e AC

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    e  go to state 34
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 20

   26 a: ID EQ . r SC

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    r  go to state 38
    e  go to state 39
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 21

   13 block: BO @2 . stmt_list BC

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt       go to state 40
    if         go to state 10
    ifelse     go to state 11
    while      go to state 12
    block      go to state 13
    stmt_list  go to state 41
    decl       go to state 14
    a          go to state 15
    l          go to state 16


State 22

    9 if: IF OP . bool CL m stmt
   10 ifelse: IF OP . bool CL m stmt ELSE n m stmt

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l     go to state 33
    bool  go to state 46
    bb    go to state 47
    e     go to state 48
    t     go to state 35
    f     go to state 36
    g     go to state 37


State 23

   11 while: WHILE m . OP bool CL m stmt

    OP  shift, and go to state 49


State 24

   28 l: l AO . e AC

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    e  go to state 50
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 25

   25 a: l EQ . r SC

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    r  go to state 51
    e  go to state 39
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 26

   20 arr: AO . VAL AC arr

    VAL  shift, and go to state 52


State 27

   18 id: ID arr .
   19   | ID arr . EQ VAL

    EQ  shift, and go to state 53

    $default  reduce using rule 18 (id)


State 28

   17 decl: KEY id $@3 . d SC

    CM  shift, and go to state 54

    $default  reduce using rule 24 (d)

    d  go to state 55


State 29

   27 l: ID . AO e AC
   50 g: ID .

    AO  shift, and go to state 19

    $default  reduce using rule 50 (g)


State 30

   51 g: VAL .

    $default  reduce using rule 51 (g)


State 31

   52 g: MI . g

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    g  go to state 57


State 32

   49 g: OP . e CL

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    e  go to state 58
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 33

   28 l: l . AO e AC
   43 e: l .

    AO  shift, and go to state 24

    $default  reduce using rule 43 (e)


State 34

   27 l: ID AO e . AC
   40 e: e . PL t
   41  | e . MI t

    PL  shift, and go to state 59
    MI  shift, and go to state 60
    AC  shift, and go to state 61


State 35

   42 e: t .
   44 t: t . MUL f
   45  | t . DIV f

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63

    $default  reduce using rule 42 (e)


State 36

   46 t: f .

    $default  reduce using rule 46 (t)


State 37

   47 f: g . POW f
   48  | g .

    POW  shift, and go to state 64

    $default  reduce using rule 48 (f)


State 38

   26 a: ID EQ r . SC

    SC  shift, and go to state 65


State 39

   29 r: e .
   40 e: e . PL t
   41  | e . MI t

    PL  shift, and go to state 59
    MI  shift, and go to state 60

    $default  reduce using rule 29 (r)


State 40

   15 stmt_list: stmt .

    $default  reduce using rule 15 (stmt_list)


State 41

   13 block: BO @2 stmt_list . BC
   14 stmt_list: stmt_list . m stmt

    BC  shift, and go to state 66

    $default  reduce using rule 38 (m)

    m  go to state 67


State 42

   33 bb: NOT . bb

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l   go to state 33
    bb  go to state 68
    e   go to state 48
    t   go to state 35
    f   go to state 36
    g   go to state 37


State 43

   34 bb: OP . bool CL
   49 g: OP . e CL

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l     go to state 33
    bool  go to state 69
    bb    go to state 47
    e     go to state 70
    t     go to state 35
    f     go to state 36
    g     go to state 37


State 44

   36 bb: TRUE .

    $default  reduce using rule 36 (bb)


State 45

   37 bb: FALSE .

    $default  reduce using rule 37 (bb)


State 46

    9 if: IF OP bool . CL m stmt
   10 ifelse: IF OP bool . CL m stmt ELSE n m stmt
   30 bool: bool . OR m bb
   31     | bool . AND m bb

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    CL   shift, and go to state 73


State 47

   32 bool: bb .

    $default  reduce using rule 32 (bool)


State 48

   35 bb: e . RELOP e
   40 e: e . PL t
   41  | e . MI t

    RELOP  shift, and go to state 74
    PL     shift, and go to state 59
    MI     shift, and go to state 60


State 49

   11 while: WHILE m OP . bool CL m stmt

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l     go to state 33
    bool  go to state 75
    bb    go to state 47
    e     go to state 48
    t     go to state 35
    f     go to state 36
    g     go to state 37


State 50

   28 l: l AO e . AC
   40 e: e . PL t
   41  | e . MI t

    PL  shift, and go to state 59
    MI  shift, and go to state 60
    AC  shift, and go to state 76


State 51

   25 a: l EQ r . SC

    SC  shift, and go to state 77


State 52

   20 arr: AO VAL . AC arr

    AC  shift, and go to state 78


State 53

   19 id: ID arr EQ . VAL

    VAL  shift, and go to state 79


State 54

   23 d: CM . id $@4 d

    ID  shift, and go to state 17

    id  go to state 80


State 55

   17 decl: KEY id $@3 d . SC

    SC  shift, and go to state 81


State 56

   50 g: ID .

    $default  reduce using rule 50 (g)


State 57

   52 g: MI g .

    $default  reduce using rule 52 (g)


State 58

   40 e: e . PL t
   41  | e . MI t
   49 g: OP e . CL

    PL  shift, and go to state 59
    MI  shift, and go to state 60
    CL  shift, and go to state 82


State 59

   40 e: e PL . t

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    t  go to state 83
    f  go to state 36
    g  go to state 37


State 60

   41 e: e MI . t

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    t  go to state 84
    f  go to state 36
    g  go to state 37


State 61

   27 l: ID AO e AC .

    $default  reduce using rule 27 (l)


State 62

   44 t: t MUL . f

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    f  go to state 85
    g  go to state 37


State 63

   45 t: t DIV . f

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    f  go to state 86
    g  go to state 37


State 64

   47 f: g POW . f

    ID   shift, and go to state 56
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    f  go to state 87
    g  go to state 37


State 65

   26 a: ID EQ r SC .

    $default  reduce using rule 26 (a)


State 66

   13 block: BO @2 stmt_list BC .

    $default  reduce using rule 13 (block)


State 67

   14 stmt_list: stmt_list m . stmt

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt    go to state 88
    if      go to state 10
    ifelse  go to state 11
    while   go to state 12
    block   go to state 13
    decl    go to state 14
    a       go to state 15
    l       go to state 16


State 68

   33 bb: NOT bb .

    $default  reduce using rule 33 (bb)


State 69

   30 bool: bool . OR m bb
   31     | bool . AND m bb
   34 bb: OP bool . CL

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    CL   shift, and go to state 89


State 70

   35 bb: e . RELOP e
   40 e: e . PL t
   41  | e . MI t
   49 g: OP e . CL

    RELOP  shift, and go to state 74
    PL     shift, and go to state 59
    MI     shift, and go to state 60
    CL     shift, and go to state 82


State 71

   31 bool: bool AND . m bb

    $default  reduce using rule 38 (m)

    m  go to state 90


State 72

   30 bool: bool OR . m bb

    $default  reduce using rule 38 (m)

    m  go to state 91


State 73

    9 if: IF OP bool CL . m stmt
   10 ifelse: IF OP bool CL . m stmt ELSE n m stmt

    $default  reduce using rule 38 (m)

    m  go to state 92


State 74

   35 bb: e RELOP . e

    ID   shift, and go to state 29
    VAL  shift, and go to state 30
    MI   shift, and go to state 31
    OP   shift, and go to state 32

    l  go to state 33
    e  go to state 93
    t  go to state 35
    f  go to state 36
    g  go to state 37


State 75

   11 while: WHILE m OP bool . CL m stmt
   30 bool: bool . OR m bb
   31     | bool . AND m bb

    AND  shift, and go to state 71
    OR   shift, and go to state 72
    CL   shift, and go to state 94


State 76

   28 l: l AO e AC .

    $default  reduce using rule 28 (l)


State 77

   25 a: l EQ r SC .

    $default  reduce using rule 25 (a)


State 78

   20 arr: AO VAL AC . arr

    AO  shift, and go to state 26

    $default  reduce using rule 21 (arr)

    arr  go to state 95


State 79

   19 id: ID arr EQ VAL .

    $default  reduce using rule 19 (id)


State 80

   23 d: CM id . $@4 d

    $default  reduce using rule 22 ($@4)

    $@4  go to state 96


State 81

   17 decl: KEY id $@3 d SC .

    $default  reduce using rule 17 (decl)


State 82

   49 g: OP e CL .

    $default  reduce using rule 49 (g)


State 83

   40 e: e PL t .
   44 t: t . MUL f
   45  | t . DIV f

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63

    $default  reduce using rule 40 (e)


State 84

   41 e: e MI t .
   44 t: t . MUL f
   45  | t . DIV f

    MUL  shift, and go to state 62
    DIV  shift, and go to state 63

    $default  reduce using rule 41 (e)


State 85

   44 t: t MUL f .

    $default  reduce using rule 44 (t)


State 86

   45 t: t DIV f .

    $default  reduce using rule 45 (t)


State 87

   47 f: g POW f .

    $default  reduce using rule 47 (f)


State 88

   14 stmt_list: stmt_list m stmt .

    $default  reduce using rule 14 (stmt_list)


State 89

   34 bb: OP bool CL .

    $default  reduce using rule 34 (bb)


State 90

   31 bool: bool AND m . bb

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l   go to state 33
    bb  go to state 97
    e   go to state 48
    t   go to state 35
    f   go to state 36
    g   go to state 37


State 91

   30 bool: bool OR m . bb

    NOT    shift, and go to state 42
    ID     shift, and go to state 29
    VAL    shift, and go to state 30
    MI     shift, and go to state 31
    OP     shift, and go to state 43
    TRUE   shift, and go to state 44
    FALSE  shift, and go to state 45

    l   go to state 33
    bb  go to state 98
    e   go to state 48
    t   go to state 35
    f   go to state 36
    g   go to state 37


State 92

    9 if: IF OP bool CL m . stmt
   10 ifelse: IF OP bool CL m . stmt ELSE n m stmt

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt    go to state 99
    if      go to state 10
    ifelse  go to state 11
    while   go to state 12
    block   go to state 13
    decl    go to state 14
    a       go to state 15
    l       go to state 16


State 93

   35 bb: e RELOP e .
   40 e: e . PL t
   41  | e . MI t

    PL  shift, and go to state 59
    MI  shift, and go to state 60

    $default  reduce using rule 35 (bb)


State 94

   11 while: WHILE m OP bool CL . m stmt

    $default  reduce using rule 38 (m)

    m  go to state 100


State 95

   20 arr: AO VAL AC arr .

    $default  reduce using rule 20 (arr)


State 96

   23 d: CM id $@4 . d

    CM  shift, and go to state 54

    $default  reduce using rule 24 (d)

    d  go to state 101


State 97

   31 bool: bool AND m bb .

    $default  reduce using rule 31 (bool)


State 98

   30 bool: bool OR m bb .

    $default  reduce using rule 30 (bool)


State 99

    9 if: IF OP bool CL m stmt .
   10 ifelse: IF OP bool CL m stmt . ELSE n m stmt

    ELSE  shift, and go to state 102

    ELSE      [reduce using rule 9 (if)]
    $default  reduce using rule 9 (if)


State 100

   11 while: WHILE m OP bool CL m . stmt

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt    go to state 103
    if      go to state 10
    ifelse  go to state 11
    while   go to state 12
    block   go to state 13
    decl    go to state 14
    a       go to state 15
    l       go to state 16


State 101

   23 d: CM id $@4 d .

    $default  reduce using rule 23 (d)


State 102

   10 ifelse: IF OP bool CL m stmt ELSE . n m stmt

    $default  reduce using rule 39 (n)

    n  go to state 104


State 103

   11 while: WHILE m OP bool CL m stmt .

    $default  reduce using rule 11 (while)


State 104

   10 ifelse: IF OP bool CL m stmt ELSE n . m stmt

    $default  reduce using rule 38 (m)

    m  go to state 105


State 105

   10 ifelse: IF OP bool CL m stmt ELSE n m . stmt

    KEY    shift, and go to state 4
    ID     shift, and go to state 5
    BO     shift, and go to state 6
    IF     shift, and go to state 7
    WHILE  shift, and go to state 8

    stmt    go to state 106
    if      go to state 10
    ifelse  go to state 11
    while   go to state 12
    block   go to state 13
    decl    go to state 14
    a       go to state 15
    l       go to state 16


State 106

   10 ifelse: IF OP bool CL m stmt ELSE n m stmt .

    $default  reduce using rule 10 (ifelse)
